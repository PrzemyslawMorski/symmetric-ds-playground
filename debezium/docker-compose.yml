services:
  zookeeper:
    image: quay.io/debezium/zookeeper:3.2
    container_name: dbz_zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: quay.io/debezium/kafka:3.2
    container_name: dbz_kafka
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    ports:
      - "9092:9092"

  connect:
    image: quay.io/debezium/connect:3.2
    container_name: dbz_connect
    depends_on:
      - kafka
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - GROUP_ID=1
      - CONFIG_STORAGE_TOPIC=connect_configs
      - OFFSET_STORAGE_TOPIC=connect_offsets
      - STATUS_STORAGE_TOPIC=connect_statuses
      - KEY_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - VALUE_CONVERTER=org.apache.kafka.connect.json.JsonConverter
      - ENABLE_DEBEZIUM_SCRIPTING=true
      - KAFKA_HEAP_OPTS=-Xms256m -Xmx768m
    ports:
      - "8083:8083"
    mem_limit: 1g

  mssql:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: demo_mssql
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=YourStrong!Passw0rd
      - MSSQL_AGENT_ENABLED=true
    ports:
      - "14333:1433"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          '/opt/mssql-tools18/bin/sqlcmd -C -No -S localhost -U sa -P ${SA_PASSWORD:-YourStrong!Passw0rd} -Q "SELECT 1" || exit 1',
        ]
      interval: 10s
      timeout: 5s
      retries: 30
    volumes:
      - ./mssql/seed.sql:/docker-entrypoint-initdb.d/seed.sql:ro

  postgres:
    image: postgres:16
    container_name: demo_postgres
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=suppliers_replica
    ports:
      - "15433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d suppliers_replica"]
      interval: 10s
      timeout: 5s
      retries: 30
